/* Definitions for MicroBlaze running Linux.
   Copyright 2009 Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GCC; see the file COPYING.  If not, write to
the Free Software Foundation, 51 Franklin Street, Fifth Floor,
Boston, MA 02110-1301, USA.  */


#define SYSROOT_SUFFIX_SPEC ""
#define SYSROOT_HEADERS_SUFFIX_SPEC ""

/* Redefine the entire default search path for include files so that
   it will be generated by compiler dynamically on base of the compiler's
   binary location. */
#undef INCLUDE_DEFAULTS
#define INCLUDE_DEFAULTS                                       \
  {                                                            \
    { GPLUSPLUS_INCLUDE_DIR, "G++", 1, 1, 1 },                 \
    { GPLUSPLUS_TOOL_INCLUDE_DIR, "G++", 1, 1, 1 },            \
    { GPLUSPLUS_BACKWARD_INCLUDE_DIR, "G++", 1, 1, 1 },        \
    { GCC_INCLUDE_DIR, "GCC", 0, 0, 0 },                       \
    { TOOL_INCLUDE_DIR, "BINUTILS", 0, 0, 0 },                 \
    { "/usr/include", 0, 0, 1, 1 },                            \
    { 0, 0, 0, 0, 0 }                                          \
  }

/* Define the macro to 1 to enable changes made in the gcc.c file
   to exclude host library directories such as /lib and /libexec from the
   default search path for libraries. */
#define TARGET_SYSTEM_ROOT_RELOCATABLE_ONLY 1

/* Linux and BlueCat-specific declarations */
#undef  TARGET_OS_CPP_BUILTINS
#define TARGET_OS_CPP_BUILTINS()          \
  do                                      \
    {                                     \
      LINUX_TARGET_OS_CPP_BUILTINS();     \
      if (flag_pic)                       \
        {                                 \
          builtin_define ("__PIC__");     \
          builtin_define ("__pic__");     \
        }                                 \
    }                                     \
  while (0)


/* Target CPU builtins */
#undef TARGET_CPU_CPP_BUILTINS
#define TARGET_CPU_CPP_BUILTINS()				\
  do								\
    {								\
        builtin_define ("_BIG_ENDIAN");                         \
        builtin_define ("__MICROBLAZE__");                      \
        builtin_define ("__microblaze__");                      \
                                                                \
        builtin_assert ("cpu=microblaze");                      \
        builtin_assert ("machine=microblaze");                  \
} while (0)


#define DYNAMIC_LINKER "/lib/ld.so.1"
#undef  SUBTARGET_EXTRA_SPECS
#define SUBTARGET_EXTRA_SPECS \
  { "dynamic_linker", DYNAMIC_LINKER }

#undef LINK_SPEC
#define LINK_SPEC "%{shared:-shared} \
  %{!shared: \
    %{!static: \
      %{rdynamic:-export-dynamic} \
      %{!dynamic-linker:-dynamic-linker %(dynamic_linker)}} \
    %{static:-static}}"

